# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: inferencedata.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='inferencedata.proto',
  package='inferencedata',
  syntax='proto3',
  serialized_options=b'\n\033io.grpc.examples.helloworldB\017HelloWorldProtoP\001\242\002\003HLW',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x13inferencedata.proto\x12\rinferencedata\"\'\n\x05Image\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x12\n\nimage_data\x18\x02 \x01(\x0c\"2\n\nImageBatch\x12$\n\x06images\x18\x01 \x03(\x0b\x32\x14.inferencedata.Image\"!\n\x06Result\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x0b\n\x03num\x18\x02 \x01(\x05\"5\n\x0bResultBatch\x12&\n\x07results\x18\x01 \x03(\x0b\x32\x15.inferencedata.Result2S\n\x0fRemoteInference\x12@\n\x05Infer\x12\x19.inferencedata.ImageBatch\x1a\x1a.inferencedata.ResultBatch\"\x00\x42\x36\n\x1bio.grpc.examples.helloworldB\x0fHelloWorldProtoP\x01\xa2\x02\x03HLWb\x06proto3'
)




_IMAGE = _descriptor.Descriptor(
  name='Image',
  full_name='inferencedata.Image',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='inferencedata.Image.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='image_data', full_name='inferencedata.Image.image_data', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=38,
  serialized_end=77,
)


_IMAGEBATCH = _descriptor.Descriptor(
  name='ImageBatch',
  full_name='inferencedata.ImageBatch',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='images', full_name='inferencedata.ImageBatch.images', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=79,
  serialized_end=129,
)


_RESULT = _descriptor.Descriptor(
  name='Result',
  full_name='inferencedata.Result',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='inferencedata.Result.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='num', full_name='inferencedata.Result.num', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=131,
  serialized_end=164,
)


_RESULTBATCH = _descriptor.Descriptor(
  name='ResultBatch',
  full_name='inferencedata.ResultBatch',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='results', full_name='inferencedata.ResultBatch.results', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=166,
  serialized_end=219,
)

_IMAGEBATCH.fields_by_name['images'].message_type = _IMAGE
_RESULTBATCH.fields_by_name['results'].message_type = _RESULT
DESCRIPTOR.message_types_by_name['Image'] = _IMAGE
DESCRIPTOR.message_types_by_name['ImageBatch'] = _IMAGEBATCH
DESCRIPTOR.message_types_by_name['Result'] = _RESULT
DESCRIPTOR.message_types_by_name['ResultBatch'] = _RESULTBATCH
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Image = _reflection.GeneratedProtocolMessageType('Image', (_message.Message,), {
  'DESCRIPTOR' : _IMAGE,
  '__module__' : 'inferencedata_pb2'
  # @@protoc_insertion_point(class_scope:inferencedata.Image)
  })
_sym_db.RegisterMessage(Image)

ImageBatch = _reflection.GeneratedProtocolMessageType('ImageBatch', (_message.Message,), {
  'DESCRIPTOR' : _IMAGEBATCH,
  '__module__' : 'inferencedata_pb2'
  # @@protoc_insertion_point(class_scope:inferencedata.ImageBatch)
  })
_sym_db.RegisterMessage(ImageBatch)

Result = _reflection.GeneratedProtocolMessageType('Result', (_message.Message,), {
  'DESCRIPTOR' : _RESULT,
  '__module__' : 'inferencedata_pb2'
  # @@protoc_insertion_point(class_scope:inferencedata.Result)
  })
_sym_db.RegisterMessage(Result)

ResultBatch = _reflection.GeneratedProtocolMessageType('ResultBatch', (_message.Message,), {
  'DESCRIPTOR' : _RESULTBATCH,
  '__module__' : 'inferencedata_pb2'
  # @@protoc_insertion_point(class_scope:inferencedata.ResultBatch)
  })
_sym_db.RegisterMessage(ResultBatch)


DESCRIPTOR._options = None

_REMOTEINFERENCE = _descriptor.ServiceDescriptor(
  name='RemoteInference',
  full_name='inferencedata.RemoteInference',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=221,
  serialized_end=304,
  methods=[
  _descriptor.MethodDescriptor(
    name='Infer',
    full_name='inferencedata.RemoteInference.Infer',
    index=0,
    containing_service=None,
    input_type=_IMAGEBATCH,
    output_type=_RESULTBATCH,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_REMOTEINFERENCE)

DESCRIPTOR.services_by_name['RemoteInference'] = _REMOTEINFERENCE

# @@protoc_insertion_point(module_scope)
